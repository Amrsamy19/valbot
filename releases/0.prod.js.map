{"version":3,"sources":["webpack:///./src/ValClient.js"],"names":["require","Client","module","exports","options","initialiseLoaders","token","process","env","AUTH_TOKEN","setTimeout","login","command","context","args","guild","hidden","deepSubcmd","c","a","arg","cmd","subcommands","find","s","name","toLowerCase","aliases","includes","slice","modules","commandRules","verifyCommand","verify","_run","logError"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eAAmBA,mBAAO,CAAC,8BAAD,C;IAAlBC,M,YAAAA,M,EACR;AAEA;;;AACAC,MAAM,CAACC,OAAP;AAAA;AAAA;AAAA;;AACE,uBAA2B;AAAA;;AAAA,QAAdC,OAAc,uEAAJ,EAAI;;AAAA;;AACzB,mFAAMA,OAAN;;AACA,UAAKC,iBAAL,GAFyB,CAGzB;;;AAHyB;AAI1B;;AALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOeC,qBAPf,2DAOuBC,OAAO,CAACC,GAAR,CAAYC,UAPnC;AAAA;AAAA;AAAA,4FASwBH,KATxB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYM,qBAAKI,UAAL,CAAgB,KAAKC,KAArB,EAA4B,IAA5B;;AAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAgBoBC,OAhBpB,EAgB6BC,OAhB7B,EAgBsCC,IAhBtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAkBQD,OAAO,CAACE,KAAR,IAAiB,CAACH,OAAO,CAACI,MAlBlC;AAAA;AAAA;AAAA;;AAmBYC,0BAnBZ,GAmByB,SAAbA,UAAa,CAACC,CAAD,EAAIC,CAAJ,EAAU;AAAA,0CACbA,CADa;AAAA,sBACpBC,GADoB;;AAE3B,sBAAMC,GAAG,GAAGH,CAAC,CAACI,WAAF,GACRJ,CAAC,CAACI,WAAF,CAAcC,IAAd,CAAmB,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACC,IAAF,CAAOC,WAAP,OAAyBN,GAAzB,IAAiCI,CAAC,CAACG,OAAF,IAAaH,CAAC,CAACG,OAAF,CAAUC,QAAV,CAAmBR,GAAnB,CAAlD;AAAA,mBAApB,CADQ,GAER,IAFJ;AAGA,yBAAOC,GAAG,GAAGJ,UAAU,CAACI,GAAD,EAAMF,CAAC,CAACU,KAAF,CAAQ,CAAR,CAAN,CAAb,GAAiCX,CAA3C;AACD,iBAzBP;;AAAA;AAAA,uBA0B2B,KAAKY,OAAL,CAAaC,YAAb,CAA0BC,aAA1B,CAAwCf,UAAU,CAACL,OAAD,EAAUE,IAAV,CAAlD,EAAmED,OAAnE,CA1B3B;;AAAA;AA0BYoB,sBA1BZ;;AAAA,oBA2BWA,MA3BX;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kDA8BWrB,OAAO,CAACsB,IAAR,CAAarB,OAAb,EAAsBC,IAAtB,WAAkC,KAAKqB,QAAvC,CA9BX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAiCE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AA9CF;;AAAA;AAAA,EAAyClC,MAAzC,E","file":"0.prod.js","sourcesContent":["const { Client } = require('discord.js')\r\n// const Loaders = require('./loaders')\r\n\r\n//TODO: use object instead of array for commands\r\nmodule.exports = class ValClient extends Client {\r\n  constructor (options = {}) {\r\n    super(options)\r\n    this.initialiseLoaders()\r\n    //TODO: add initialise loaders\r\n  }\r\n\r\n  async login (token = process.env.AUTH_TOKEN) {\r\n    try {\r\n      await super.login(token)\r\n    }\r\n    catch (err) {\r\n      this.setTimeout(this.login, 5000)\r\n    }\r\n  }\r\n\r\n  async runCommand (command, context, args) {\r\n    //TODO: refactor\r\n    if (context.guild && !command.hidden) {\r\n      const deepSubcmd = (c, a) => {\r\n        const [arg] = a\r\n        const cmd = c.subcommands\r\n          ? c.subcommands.find(s => s.name.toLowerCase() === arg || (s.aliases && s.aliases.includes(arg)))\r\n          : null\r\n        return cmd ? deepSubcmd(cmd, a.slice(1)) : c\r\n      }\r\n      const verify = await this.modules.commandRules.verifyCommand(deepSubcmd(command, args), context)\r\n      if (!verify) return\r\n    }\r\n\r\n    return command._run(context, args).catch(this.logError)\r\n  }\r\n\r\n  // async initializeLoaders () {\r\n  //   //Load loaders from file\r\n  //   for (const name in Loaders) {\r\n  //     const loader = new Loaders[name](this)\r\n  //     let success = false\r\n  //     try {\r\n  //       success = await loader.load()\r\n  //     } catch (e) {\r\n  //       this.logError(e)\r\n  //     } finally {\r\n  //       if (!success && loader.critical) process.exit(1)\r\n  //     }\r\n  //   }\r\n  // }\r\n}"],"sourceRoot":""}